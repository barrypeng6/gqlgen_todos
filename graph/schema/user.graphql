type User {
  id: ID!
  email: String!
  password: String!
  name: String!
  todos(
    first: Int
    after: String
    last: Int
    before: String
  ): TodoConnection!
}

type UserEdge {
    cursor: String!
    node: User!
}

type UserConnection {
    edges: [UserEdge!]!
    pageInfo: PageInfo!
}

extend type Query {
  users(
    first: Int
    after: String
    last: Int
    before: String
  ): UserConnection!
  user(id: ID!): User!
}

input NewUser {
  name: String!
}

input LoginInput {
    userID: ID!
    password: String!
}

extend type Mutation {
  createUser(input: NewUser!): User! @isAuthenticated
  login(input: LoginInput): String!
}

directive @isAuthenticated on FIELD_DEFINITION